package eflo

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// ListErAttachments invokes the eflo.ListErAttachments API synchronously
func (client *Client) ListErAttachments(request *ListErAttachmentsRequest) (response *ListErAttachmentsResponse, err error) {
	response = CreateListErAttachmentsResponse()
	err = client.DoAction(request, response)
	return
}

// ListErAttachmentsWithChan invokes the eflo.ListErAttachments API asynchronously
func (client *Client) ListErAttachmentsWithChan(request *ListErAttachmentsRequest) (<-chan *ListErAttachmentsResponse, <-chan error) {
	responseChan := make(chan *ListErAttachmentsResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ListErAttachments(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// ListErAttachmentsWithCallback invokes the eflo.ListErAttachments API asynchronously
func (client *Client) ListErAttachmentsWithCallback(request *ListErAttachmentsRequest, callback func(response *ListErAttachmentsResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ListErAttachmentsResponse
		var err error
		defer close(result)
		response, err = client.ListErAttachments(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// ListErAttachmentsRequest is the request struct for api ListErAttachments
type ListErAttachmentsRequest struct {
	*requests.RpcRequest
	PageNumber          requests.Integer `position:"Body" name:"PageNumber"`
	ResourceTenantId    string           `position:"Body" name:"ResourceTenantId"`
	AutoReceiveAllRoute requests.Boolean `position:"Body" name:"AutoReceiveAllRoute"`
	PageSize            requests.Integer `position:"Body" name:"PageSize"`
	InstanceType        string           `position:"Body" name:"InstanceType"`
	ErAttachmentName    string           `position:"Body" name:"ErAttachmentName"`
	ErId                string           `position:"Body" name:"ErId"`
	InstanceId          string           `position:"Body" name:"InstanceId"`
	ErAttachmentId      string           `position:"Body" name:"ErAttachmentId"`
	EnablePage          requests.Boolean `position:"Body" name:"EnablePage"`
	Status              string           `position:"Body" name:"Status"`
}

// ListErAttachmentsResponse is the response struct for api ListErAttachments
type ListErAttachmentsResponse struct {
	*responses.BaseResponse
	Code      int     `json:"Code" xml:"Code"`
	Message   string  `json:"Message" xml:"Message"`
	RequestId string  `json:"RequestId" xml:"RequestId"`
	Content   Content `json:"Content" xml:"Content"`
}

// CreateListErAttachmentsRequest creates a request to invoke ListErAttachments API
func CreateListErAttachmentsRequest() (request *ListErAttachmentsRequest) {
	request = &ListErAttachmentsRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("eflo", "2022-05-30", "ListErAttachments", "eflo", "openAPI")
	request.Method = requests.POST
	return
}

// CreateListErAttachmentsResponse creates a response to parse from ListErAttachments response
func CreateListErAttachmentsResponse() (response *ListErAttachmentsResponse) {
	response = &ListErAttachmentsResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
