package domain

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// SaveContactTemplate invokes the domain.SaveContactTemplate API synchronously
func (client *Client) SaveContactTemplate(request *SaveContactTemplateRequest) (response *SaveContactTemplateResponse, err error) {
	response = CreateSaveContactTemplateResponse()
	err = client.DoAction(request, response)
	return
}

// SaveContactTemplateWithChan invokes the domain.SaveContactTemplate API asynchronously
func (client *Client) SaveContactTemplateWithChan(request *SaveContactTemplateRequest) (<-chan *SaveContactTemplateResponse, <-chan error) {
	responseChan := make(chan *SaveContactTemplateResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.SaveContactTemplate(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// SaveContactTemplateWithCallback invokes the domain.SaveContactTemplate API asynchronously
func (client *Client) SaveContactTemplateWithCallback(request *SaveContactTemplateRequest, callback func(response *SaveContactTemplateResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *SaveContactTemplateResponse
		var err error
		defer close(result)
		response, err = client.SaveContactTemplate(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// SaveContactTemplateRequest is the request struct for api SaveContactTemplate
type SaveContactTemplateRequest struct {
	*requests.RpcRequest
	CCompany          string           `position:"Query" name:"CCompany"`
	DefaultTemplate   requests.Boolean `position:"Query" name:"DefaultTemplate"`
	ECompany          string           `position:"Query" name:"ECompany"`
	TelMain           string           `position:"Query" name:"TelMain"`
	CName             string           `position:"Query" name:"CName"`
	CProvince         string           `position:"Query" name:"CProvince"`
	RegType           string           `position:"Query" name:"RegType"`
	TelExt            string           `position:"Query" name:"TelExt"`
	PostalCode        string           `position:"Query" name:"PostalCode"`
	Lang              string           `position:"Query" name:"Lang"`
	EVenu             string           `position:"Query" name:"EVenu"`
	Email             string           `position:"Query" name:"Email"`
	ContactTemplateId requests.Integer `position:"Query" name:"ContactTemplateId"`
	TelArea           string           `position:"Query" name:"TelArea"`
	ECity             string           `position:"Query" name:"ECity"`
	CCity             string           `position:"Query" name:"CCity"`
	EName             string           `position:"Query" name:"EName"`
	CVenu             string           `position:"Query" name:"CVenu"`
	EProvince         string           `position:"Query" name:"EProvince"`
	UserClientIp      string           `position:"Query" name:"UserClientIp"`
	CCountry          string           `position:"Query" name:"CCountry"`
}

// SaveContactTemplateResponse is the response struct for api SaveContactTemplate
type SaveContactTemplateResponse struct {
	*responses.BaseResponse
	RequestId         string `json:"RequestId" xml:"RequestId"`
	ContactTemplateId int64  `json:"ContactTemplateId" xml:"ContactTemplateId"`
	Success           bool   `json:"Success" xml:"Success"`
}

// CreateSaveContactTemplateRequest creates a request to invoke SaveContactTemplate API
func CreateSaveContactTemplateRequest() (request *SaveContactTemplateRequest) {
	request = &SaveContactTemplateRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Domain", "2016-05-11", "SaveContactTemplate", "domain", "openAPI")
	request.Method = requests.POST
	return
}

// CreateSaveContactTemplateResponse creates a response to parse from SaveContactTemplate response
func CreateSaveContactTemplateResponse() (response *SaveContactTemplateResponse) {
	response = &SaveContactTemplateResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
