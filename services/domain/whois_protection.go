package domain

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// WhoisProtection invokes the domain.WhoisProtection API synchronously
func (client *Client) WhoisProtection(request *WhoisProtectionRequest) (response *WhoisProtectionResponse, err error) {
	response = CreateWhoisProtectionResponse()
	err = client.DoAction(request, response)
	return
}

// WhoisProtectionWithChan invokes the domain.WhoisProtection API asynchronously
func (client *Client) WhoisProtectionWithChan(request *WhoisProtectionRequest) (<-chan *WhoisProtectionResponse, <-chan error) {
	responseChan := make(chan *WhoisProtectionResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.WhoisProtection(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// WhoisProtectionWithCallback invokes the domain.WhoisProtection API asynchronously
func (client *Client) WhoisProtectionWithCallback(request *WhoisProtectionRequest, callback func(response *WhoisProtectionResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *WhoisProtectionResponse
		var err error
		defer close(result)
		response, err = client.WhoisProtection(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// WhoisProtectionRequest is the request struct for api WhoisProtection
type WhoisProtectionRequest struct {
	*requests.RpcRequest
	WhoisProtect requests.Boolean `position:"Query" name:"WhoisProtect"`
	DataSource   requests.Integer `position:"Query" name:"DataSource"`
	UserClientIp string           `position:"Query" name:"UserClientIp"`
	DataContent  string           `position:"Query" name:"DataContent"`
	Lang         string           `position:"Query" name:"Lang"`
}

// WhoisProtectionResponse is the response struct for api WhoisProtection
type WhoisProtectionResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
	Result    int    `json:"Result" xml:"Result"`
}

// CreateWhoisProtectionRequest creates a request to invoke WhoisProtection API
func CreateWhoisProtectionRequest() (request *WhoisProtectionRequest) {
	request = &WhoisProtectionRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Domain", "2016-05-11", "WhoisProtection", "domain", "openAPI")
	request.Method = requests.POST
	return
}

// CreateWhoisProtectionResponse creates a response to parse from WhoisProtection response
func CreateWhoisProtectionResponse() (response *WhoisProtectionResponse) {
	response = &WhoisProtectionResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
