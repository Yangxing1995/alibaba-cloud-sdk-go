package paifeaturestore

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// GetProjectFeatureEntityHotIds invokes the paifeaturestore.GetProjectFeatureEntityHotIds API synchronously
func (client *Client) GetProjectFeatureEntityHotIds(request *GetProjectFeatureEntityHotIdsRequest) (response *GetProjectFeatureEntityHotIdsResponse, err error) {
	response = CreateGetProjectFeatureEntityHotIdsResponse()
	err = client.DoAction(request, response)
	return
}

// GetProjectFeatureEntityHotIdsWithChan invokes the paifeaturestore.GetProjectFeatureEntityHotIds API asynchronously
func (client *Client) GetProjectFeatureEntityHotIdsWithChan(request *GetProjectFeatureEntityHotIdsRequest) (<-chan *GetProjectFeatureEntityHotIdsResponse, <-chan error) {
	responseChan := make(chan *GetProjectFeatureEntityHotIdsResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.GetProjectFeatureEntityHotIds(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// GetProjectFeatureEntityHotIdsWithCallback invokes the paifeaturestore.GetProjectFeatureEntityHotIds API asynchronously
func (client *Client) GetProjectFeatureEntityHotIdsWithCallback(request *GetProjectFeatureEntityHotIdsRequest, callback func(response *GetProjectFeatureEntityHotIdsResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *GetProjectFeatureEntityHotIdsResponse
		var err error
		defer close(result)
		response, err = client.GetProjectFeatureEntityHotIds(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// GetProjectFeatureEntityHotIdsRequest is the request struct for api GetProjectFeatureEntityHotIds
type GetProjectFeatureEntityHotIdsRequest struct {
	*requests.RoaRequest
	InstanceId        string `position:"Path" name:"InstanceId"`
	FeatureEntityName string `position:"Path" name:"FeatureEntityName"`
	ProjectId         string `position:"Path" name:"ProjectId"`
	NextSeqNumber     string `position:"Path" name:"NextSeqNumber"`
}

// GetProjectFeatureEntityHotIdsResponse is the response struct for api GetProjectFeatureEntityHotIds
type GetProjectFeatureEntityHotIdsResponse struct {
	*responses.BaseResponse
	RequestId     string `json:"RequestId" xml:"RequestId"`
	HotIds        string `json:"HotIds" xml:"HotIds"`
	Count         int    `json:"Count" xml:"Count"`
	NextSeqNumber string `json:"NextSeqNumber" xml:"NextSeqNumber"`
}

// CreateGetProjectFeatureEntityHotIdsRequest creates a request to invoke GetProjectFeatureEntityHotIds API
func CreateGetProjectFeatureEntityHotIdsRequest() (request *GetProjectFeatureEntityHotIdsRequest) {
	request = &GetProjectFeatureEntityHotIdsRequest{
		RoaRequest: &requests.RoaRequest{},
	}
	request.InitWithApiInfo("PaiFeatureStore", "2023-06-21", "GetProjectFeatureEntityHotIds", "/api/v1/instances/[InstanceId]/projects/[ProjectId]/featureentities/[FeatureEntityName]/hotids/[NextSeqNumber]", "", "")
	request.Method = requests.GET
	return
}

// CreateGetProjectFeatureEntityHotIdsResponse creates a response to parse from GetProjectFeatureEntityHotIds response
func CreateGetProjectFeatureEntityHotIdsResponse() (response *GetProjectFeatureEntityHotIdsResponse) {
	response = &GetProjectFeatureEntityHotIdsResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
