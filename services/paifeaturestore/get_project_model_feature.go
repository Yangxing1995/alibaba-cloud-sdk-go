package paifeaturestore

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// GetProjectModelFeature invokes the paifeaturestore.GetProjectModelFeature API synchronously
func (client *Client) GetProjectModelFeature(request *GetProjectModelFeatureRequest) (response *GetProjectModelFeatureResponse, err error) {
	response = CreateGetProjectModelFeatureResponse()
	err = client.DoAction(request, response)
	return
}

// GetProjectModelFeatureWithChan invokes the paifeaturestore.GetProjectModelFeature API asynchronously
func (client *Client) GetProjectModelFeatureWithChan(request *GetProjectModelFeatureRequest) (<-chan *GetProjectModelFeatureResponse, <-chan error) {
	responseChan := make(chan *GetProjectModelFeatureResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.GetProjectModelFeature(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// GetProjectModelFeatureWithCallback invokes the paifeaturestore.GetProjectModelFeature API asynchronously
func (client *Client) GetProjectModelFeatureWithCallback(request *GetProjectModelFeatureRequest, callback func(response *GetProjectModelFeatureResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *GetProjectModelFeatureResponse
		var err error
		defer close(result)
		response, err = client.GetProjectModelFeature(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// GetProjectModelFeatureRequest is the request struct for api GetProjectModelFeature
type GetProjectModelFeatureRequest struct {
	*requests.RoaRequest
	ModelFeatureName string `position:"Path" name:"ModelFeatureName"`
	InstanceId       string `position:"Path" name:"InstanceId"`
	ProjectId        string `position:"Path" name:"ProjectId"`
}

// GetProjectModelFeatureResponse is the response struct for api GetProjectModelFeature
type GetProjectModelFeatureResponse struct {
	*responses.BaseResponse
	RequestId            string         `json:"RequestId" xml:"RequestId"`
	ModelFeatureId       string         `json:"ModelFeatureId" xml:"ModelFeatureId"`
	ProjectId            string         `json:"ProjectId" xml:"ProjectId"`
	ProjectName          string         `json:"ProjectName" xml:"ProjectName"`
	Name                 string         `json:"Name" xml:"Name"`
	Owner                string         `json:"Owner" xml:"Owner"`
	LabelTableId         string         `json:"LabelTableId" xml:"LabelTableId"`
	LabelDatasourceId    string         `json:"LabelDatasourceId" xml:"LabelDatasourceId"`
	LabelDatasourceTable string         `json:"LabelDatasourceTable" xml:"LabelDatasourceTable"`
	LabelEventTime       string         `json:"LabelEventTime" xml:"LabelEventTime"`
	TrainingSetTable     string         `json:"TrainingSetTable" xml:"TrainingSetTable"`
	TrainingSetFGTable   string         `json:"TrainingSetFGTable" xml:"TrainingSetFGTable"`
	GmtCreateTime        string         `json:"GmtCreateTime" xml:"GmtCreateTime"`
	GmtModifiedTime      string         `json:"GmtModifiedTime" xml:"GmtModifiedTime"`
	Features             []FeaturesItem `json:"Features" xml:"Features"`
}

// CreateGetProjectModelFeatureRequest creates a request to invoke GetProjectModelFeature API
func CreateGetProjectModelFeatureRequest() (request *GetProjectModelFeatureRequest) {
	request = &GetProjectModelFeatureRequest{
		RoaRequest: &requests.RoaRequest{},
	}
	request.InitWithApiInfo("PaiFeatureStore", "2023-06-21", "GetProjectModelFeature", "/api/v1/instances/[InstanceId]/projects/[ProjectId]/modelfeatures/[ModelFeatureName]", "", "")
	request.Method = requests.GET
	return
}

// CreateGetProjectModelFeatureResponse creates a response to parse from GetProjectModelFeature response
func CreateGetProjectModelFeatureResponse() (response *GetProjectModelFeatureResponse) {
	response = &GetProjectModelFeatureResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
