package paifeaturestore

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// ExportModelFeatureTrainingSetFGTable invokes the paifeaturestore.ExportModelFeatureTrainingSetFGTable API synchronously
func (client *Client) ExportModelFeatureTrainingSetFGTable(request *ExportModelFeatureTrainingSetFGTableRequest) (response *ExportModelFeatureTrainingSetFGTableResponse, err error) {
	response = CreateExportModelFeatureTrainingSetFGTableResponse()
	err = client.DoAction(request, response)
	return
}

// ExportModelFeatureTrainingSetFGTableWithChan invokes the paifeaturestore.ExportModelFeatureTrainingSetFGTable API asynchronously
func (client *Client) ExportModelFeatureTrainingSetFGTableWithChan(request *ExportModelFeatureTrainingSetFGTableRequest) (<-chan *ExportModelFeatureTrainingSetFGTableResponse, <-chan error) {
	responseChan := make(chan *ExportModelFeatureTrainingSetFGTableResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ExportModelFeatureTrainingSetFGTable(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// ExportModelFeatureTrainingSetFGTableWithCallback invokes the paifeaturestore.ExportModelFeatureTrainingSetFGTable API asynchronously
func (client *Client) ExportModelFeatureTrainingSetFGTableWithCallback(request *ExportModelFeatureTrainingSetFGTableRequest, callback func(response *ExportModelFeatureTrainingSetFGTableResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ExportModelFeatureTrainingSetFGTableResponse
		var err error
		defer close(result)
		response, err = client.ExportModelFeatureTrainingSetFGTable(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// ExportModelFeatureTrainingSetFGTableRequest is the request struct for api ExportModelFeatureTrainingSetFGTable
type ExportModelFeatureTrainingSetFGTableRequest struct {
	*requests.RoaRequest
	ModelFeatureId string `position:"Path" name:"ModelFeatureId"`
	Body           string `position:"Body" name:"body"`
	InstanceId     string `position:"Path" name:"InstanceId"`
}

// ExportModelFeatureTrainingSetFGTableResponse is the response struct for api ExportModelFeatureTrainingSetFGTable
type ExportModelFeatureTrainingSetFGTableResponse struct {
	*responses.BaseResponse
	RequestId string `json:"requestId" xml:"requestId"`
	TaskId    string `json:"TaskId" xml:"TaskId"`
}

// CreateExportModelFeatureTrainingSetFGTableRequest creates a request to invoke ExportModelFeatureTrainingSetFGTable API
func CreateExportModelFeatureTrainingSetFGTableRequest() (request *ExportModelFeatureTrainingSetFGTableRequest) {
	request = &ExportModelFeatureTrainingSetFGTableRequest{
		RoaRequest: &requests.RoaRequest{},
	}
	request.InitWithApiInfo("PaiFeatureStore", "2023-06-21", "ExportModelFeatureTrainingSetFGTable", "/api/v1/instances/[InstanceId]/modelfeatures/[ModelFeatureId]/action/exporttrainingsetfgtable", "", "")
	request.Method = requests.POST
	return
}

// CreateExportModelFeatureTrainingSetFGTableResponse creates a response to parse from ExportModelFeatureTrainingSetFGTable response
func CreateExportModelFeatureTrainingSetFGTableResponse() (response *ExportModelFeatureTrainingSetFGTableResponse) {
	response = &ExportModelFeatureTrainingSetFGTableResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
